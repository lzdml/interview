import{_ as l,c as p,j as n,a as e,G as o,a0 as r,B as t,o as c}from"./chunks/framework.BDOpb1iH.js";const E=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"web/react相关笔记/React进阶入门.md","filePath":"web/react相关笔记/React进阶入门.md","lastUpdated":1733362906000}'),B={name:"web/react相关笔记/React进阶入门.md"};function y(i,s,C,F,A,d){const a=t("end-time");return c(),p("div",null,[s[0]||(s[0]=n("h2",{id:"react进阶入门",tabindex:"-1"},[e("React进阶入门 "),n("a",{class:"header-anchor",href:"#react进阶入门","aria-label":'Permalink to "React进阶入门"'},"​")],-1)),s[1]||(s[1]=n("hr",null,null,-1)),o(a,{time:"2022-110-25 00:23",mood:"一般"}),s[2]||(s[2]=r(`<hr><h3 id="react-children" tabindex="-1">React.Children <a class="header-anchor" href="#react-children" aria-label="Permalink to &quot;React.Children&quot;">​</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> Children</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line highlighted"><span style="color:#61AFEF;">  map</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">C</span><span style="color:#ABB2BF;">&gt;(</span><span style="color:#E06C75;font-style:italic;">children</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">C</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">ReadonlyArray</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">C</span><span style="color:#ABB2BF;">&gt;, </span><span style="color:#61AFEF;">fn</span><span style="color:#ABB2BF;">: (</span><span style="color:#E06C75;font-style:italic;">child</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">C</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">index</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#E5C07B;"> T</span><span style="color:#ABB2BF;">):</span></span>
<span class="line highlighted"><span style="color:#E5C07B;">    C</span><span style="color:#C678DD;"> extends</span><span style="color:#ABB2BF;"> null | undefined </span><span style="color:#C678DD;">?</span><span style="color:#E5C07B;"> C</span><span style="color:#C678DD;"> :</span><span style="color:#E5C07B;"> Array</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">Exclude</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">boolean</span><span style="color:#ABB2BF;"> | null | undefined&gt;&gt;;</span></span>
<span class="line highlighted"><span style="color:#61AFEF;">  forEach</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">C</span><span style="color:#ABB2BF;">&gt;(</span><span style="color:#E06C75;font-style:italic;">children</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">C</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">ReadonlyArray</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">C</span><span style="color:#ABB2BF;">&gt;, </span><span style="color:#61AFEF;">fn</span><span style="color:#ABB2BF;">: (</span><span style="color:#E06C75;font-style:italic;">child</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">C</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">index</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#E5C07B;"> void</span><span style="color:#ABB2BF;">): </span><span style="color:#E5C07B;">void</span><span style="color:#ABB2BF;">;</span></span>
<span class="line highlighted"><span style="color:#61AFEF;">  count</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">children</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">any</span><span style="color:#ABB2BF;">): </span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;">;</span></span>
<span class="line highlighted"><span style="color:#61AFEF;">  only</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">C</span><span style="color:#ABB2BF;">&gt;(</span><span style="color:#E06C75;font-style:italic;">children</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">C</span><span style="color:#ABB2BF;">): </span><span style="color:#E5C07B;">C</span><span style="color:#C678DD;"> extends</span><span style="color:#E5C07B;"> any</span><span style="color:#ABB2BF;">[] </span><span style="color:#C678DD;">?</span><span style="color:#E5C07B;"> never</span><span style="color:#C678DD;"> :</span><span style="color:#E5C07B;"> C</span><span style="color:#ABB2BF;">;</span></span>
<span class="line highlighted"><span style="color:#61AFEF;">  toArray</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">children</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">ReactNode</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">ReactNode</span><span style="color:#ABB2BF;">[]): </span><span style="color:#E5C07B;">Array</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">Exclude</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">ReactNode</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">boolean</span><span style="color:#ABB2BF;"> | null | undefined&gt;&gt;;</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h4 id="react-children-toarray" tabindex="-1">React.Children.toArray <a class="header-anchor" href="#react-children-toarray" aria-label="Permalink to &quot;React.Children.toArray&quot;">​</a></h4><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> flatChildren</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> React</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">Children</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">toArray</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">children</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">flatChildren</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// - eg:</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// ---before---</span></span>
<span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">  $$typeof</span><span style="color:#ABB2BF;">: </span><span style="color:#61AFEF;">Symbol</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">react</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">element</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#E06C75;">  key</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;.0&#39;</span></span>
<span class="line"><span style="color:#E06C75;">  props</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">    children</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;...&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#E06C75;">  ref</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">null</span></span>
<span class="line"><span style="color:#E06C75;">  type</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;ul&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//---after---</span></span>
<span class="line"><span style="color:#ABB2BF;">[{</span></span>
<span class="line"><span style="color:#E06C75;">  $$typeof</span><span style="color:#ABB2BF;">: </span><span style="color:#61AFEF;">Symbol</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">react</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">element</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#E06C75;">  key</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;.0&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">  props</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">    children</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;...&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">  },</span></span>
<span class="line"><span style="color:#E06C75;">  ref</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">null</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">  type</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;ul&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">}]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div>`,5))])}const u=l(B,[["render",y]]);export{E as __pageData,u as default};
