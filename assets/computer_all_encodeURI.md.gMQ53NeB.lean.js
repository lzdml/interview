import{_ as t,c as n,G as r,a0 as a,B as p,o as s}from"./chunks/framework.D62TWaax.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"computer/all/encodeURI.md","filePath":"computer/all/encodeURI.md","lastUpdated":1732672553000}'),c={name:"computer/all/encodeURI.md"};function d(l,e,i,m,U,R){const o=p("end-time");return s(),n("div",null,[r(o,{time:"新增时间: 2023-03-08 13:21"}),e[0]||(e[0]=a('<h2 id="encodeuri-、encodeuricomponent-区别及使用场景" tabindex="-1">encodeURI()、encodeURIComponent()区别及使用场景 <a class="header-anchor" href="#encodeuri-、encodeuricomponent-区别及使用场景" aria-label="Permalink to &quot;encodeURI()、encodeURIComponent()区别及使用场景&quot;">​</a></h2><hr><ol><li><strong>encodeURI()</strong></li></ol><p>通常用于转码整个 URL，不会对 URL <strong>元字符</strong>以及<strong>语义字符</strong>进行转码</p><ul><li><p><strong>URL 元字符：</strong> 分号（;），逗号（,），斜杠（/），问号（?），冒号（:），at（@），&amp;，等号（=），加号（+），美元符号（$），井号（#）</p></li><li><p><strong>语义字符：</strong> a-z，A-Z，0-9，连词号（-），下划线（_），点（.），感叹号（!），波浪线（~），星号（*），单引号（&#39;），圆括号（()）</p></li></ul><hr><ol start="2"><li><strong>encodeURIComponent()</strong></li></ol><p>通常只用于转码URL组成部分，如URL中?后的一串；会转码除了语义字符之外的所有字符，即元字符也会被转码</p><p><strong>注：若整个链接被encodeURIComponent()转码，则该链接无法被浏览器访问，需要解码之后才可以正常访问</strong></p><hr><p><strong>总结:</strong></p><p>对于<strong>无特殊参数</strong>的链接，都可以使用encodeURI()进行转码，那什么特殊情况需要用到encodeURIComponent()呢？通常是链接带着一些特殊参数的时候，就比如以下链接</p><blockquote><p><a href="https://www.baidu.com/s?returnURL=http://www.test.com/" target="_blank" rel="noreferrer">https://www.baidu.com/s?returnURL=http://www.test.com/</a></p></blockquote><p>链接内包含一个回调地址，回调地址是另外一个URL，此时我们就需要使用encodeURIComponent()对回调地址进行转码，这样一来，URL中就不会出现多个http://，多个&amp;这样的特殊字符；方便对回调地址进行处理；以上链接处理如下：</p>',14))])}const h=t(c,[["render",d]]);export{g as __pageData,h as default};
