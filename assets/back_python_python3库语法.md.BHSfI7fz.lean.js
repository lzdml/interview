import{_ as n,c as a,a0 as l,o as p}from"./chunks/framework.BDOpb1iH.js";const e="/interview/assets/pydemo1.ouPCsn6G.png",b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"back/python/python3库语法.md","filePath":"back/python/python3库语法.md","lastUpdated":1733362906000}'),o={name:"back/python/python3库语法.md"};function t(r,s,c,B,i,y){return p(),a("div",null,s[0]||(s[0]=[l(`<h2 id="python3-库语法" tabindex="-1">python3 库语法 <a class="header-anchor" href="#python3-库语法" aria-label="Permalink to &quot;python3 库语法&quot;">​</a></h2><details class="details custom-block"><summary>random</summary><ul><li>random.randint(1, 3) 随机生成 1~3 的数字</li></ul><hr><ul><li>random.choice()方法用于返回一个列表, 元组或字符串中的随机项<br> print(random.choice(&#39;1234&#39;)) 随机返回 1~4 的字符串<br> print(random.choice([213, &#39;312&#39;, &#39;abc&#39;])) 随机返回[213, &#39;312&#39;, &#39;abc&#39;]中的一个值</li></ul><hr></details><hr><details class="details custom-block"><summary>string 模块</summary><ul><li>string.ascii_letters 生成字符串的字母序列(也就是所有大小写字母)</li><li>string.ascii_lowercase 生成字符串的小写字母序列()</li><li>string.ascii_uppercase 生成字符串的大写字母序列</li><li>string.digits 生成字符串的数字序列 0123456789</li></ul></details><hr><details class="details custom-block"><summary>pyautogui 模块</summary><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 每个字母间隔0.1秒在鼠标聚焦的位置输入hello world</span></span>
<span class="line"><span style="color:#ABB2BF;">pyautogui.</span><span style="color:#61AFEF;">typewrite</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;hello world</span><span style="color:#56B6C2;">\\n</span><span style="color:#98C379;">&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">interval</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">0.1</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 如一个pc端的简单的短信自动化脚本</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 意思如下, 在鼠标聚焦的地方输入5次, 每次从大小写字母中随机生成1-10位字母并发送</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> time</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> random</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> string</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> pyautogui</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">phrase </span><span style="color:#56B6C2;">=</span><span style="color:#56B6C2;"> str</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">n </span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;"> 0</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">while</span><span style="color:#D19A66;"> True</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#C678DD;">    if</span><span style="color:#ABB2BF;"> n </span><span style="color:#56B6C2;">&lt;</span><span style="color:#D19A66;"> 5</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#C678DD;">        for</span><span style="color:#ABB2BF;"> i </span><span style="color:#C678DD;">in</span><span style="color:#56B6C2;"> range</span><span style="color:#ABB2BF;">(random.</span><span style="color:#61AFEF;">randint</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">)):</span></span>
<span class="line"><span style="color:#ABB2BF;">            letter </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> random.</span><span style="color:#61AFEF;">choice</span><span style="color:#ABB2BF;">(string.ascii_letters)</span></span>
<span class="line"><span style="color:#ABB2BF;">            phrase </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> phrase </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> letter</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">        pyautogui.</span><span style="color:#61AFEF;">typewrite</span><span style="color:#ABB2BF;">(phrase)</span></span>
<span class="line"><span style="color:#ABB2BF;">        pyautogui.</span><span style="color:#61AFEF;">press</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;enter&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">        phrase </span><span style="color:#56B6C2;">=</span><span style="color:#56B6C2;"> str</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">        n </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> n </span><span style="color:#56B6C2;">+</span><span style="color:#D19A66;"> 1</span></span>
<span class="line"><span style="color:#ABB2BF;">        time.</span><span style="color:#61AFEF;">sleep</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">0.005</span><span style="color:#56B6C2;"> +</span><span style="color:#D19A66;"> 0.1</span><span style="color:#56B6C2;"> *</span><span style="color:#ABB2BF;"> random.</span><span style="color:#61AFEF;">randint</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#C678DD;">    else</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">        pyautogui.</span><span style="color:#61AFEF;">keyDown</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;alt&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">        pyautogui.</span><span style="color:#61AFEF;">press</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;tab&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">        n </span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;"> 0</span></span>
<span class="line"><span style="color:#C678DD;">        break</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><p><img src="`+e+`" alt="效果图"></p></details><hr><details class="details custom-block"><summary>xlrd 模块[操作 clx 表格]</summary><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 引入 xlrd</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> xlrd</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 打开指定的excel文件, 返回一个data对象</span></span>
<span class="line"><span style="color:#ABB2BF;">data </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> xlrd.</span><span style="color:#61AFEF;">open_workbook</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;demo.xlsx&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 通过data对象可以得到各个sheet对象(一个excel文件可以有多个sheet, 每个sheet都是一个表格)</span></span>
<span class="line"><span style="color:#ABB2BF;">Sheet1 </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> data.</span><span style="color:#61AFEF;">sheet_by_index</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">#通过索引顺序获取</span></span>
<span class="line"><span style="color:#ABB2BF;">Sheet1 </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> data.</span><span style="color:#61AFEF;">sheet_by_name</span><span style="color:#ABB2BF;">(u‘sheet1’) </span><span style="color:#7F848E;font-style:italic;">#通过名称获取</span></span>
<span class="line"><span style="color:#ABB2BF;">Sheet1 </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> data.</span><span style="color:#61AFEF;">sheets</span><span style="color:#ABB2BF;">()[</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">] </span><span style="color:#7F848E;font-style:italic;">#通过索引顺序获取</span></span>
<span class="line"><span style="color:#ABB2BF;">num </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">data.nsheets </span><span style="color:#7F848E;font-style:italic;">#返回sheet的数目</span></span>
<span class="line"><span style="color:#56B6C2;">list</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> data.</span><span style="color:#61AFEF;">sheets</span><span style="color:#ABB2BF;">() </span><span style="color:#7F848E;font-style:italic;">#返回所有sheet对象的列表</span></span>
<span class="line"><span style="color:#56B6C2;">list</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> data.</span><span style="color:#61AFEF;">sheet_names</span><span style="color:#ABB2BF;">() </span><span style="color:#7F848E;font-style:italic;">#返回所有sheet对象名字的列表</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 通过sheet对象可以获取各个单元格，每个单元格是一个cell对象</span></span>
<span class="line"><span style="color:#ABB2BF;">name </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> sheet1.name </span><span style="color:#7F848E;font-style:italic;">#返回sheet1的名称</span></span>
<span class="line"><span style="color:#ABB2BF;">nrows </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">sheet1.nrows </span><span style="color:#7F848E;font-style:italic;">#返回sheet1的行数</span></span>
<span class="line"><span style="color:#ABB2BF;">ncols </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> sheet1.ncols </span><span style="color:#7F848E;font-style:italic;">#返回sheet1的列数</span></span>
<span class="line"><span style="color:#ABB2BF;">sheet1.</span><span style="color:#61AFEF;">cell_type</span><span style="color:#ABB2BF;">(x,y) </span><span style="color:#7F848E;font-style:italic;">#返回cell的对象类型</span></span>
<span class="line"><span style="color:#ABB2BF;">sheet1.</span><span style="color:#61AFEF;">cell</span><span style="color:#ABB2BF;">(x,y).ctype </span><span style="color:#7F848E;font-style:italic;">#返回cell的对象类型</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 即date的ctype=3，这时需要使用xlrd的xldate_as_tuple来处理为date格式</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">#先判断表格的ctype=3时xldate才能开始操作。</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># python读取excel中单元格的内容返回的有5种类型。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># ctype : 0 empty,1 string, 2 number, 3 date, 4 boolean, 5 error。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 一般情况下读取Excel中数字会自动转换为浮点数，若想判断读取为浮点数可以使用如下方法：</span></span>
<span class="line"><span style="color:#ABB2BF;">ctype </span><span style="color:#56B6C2;">==</span><span style="color:#D19A66;"> 2</span><span style="color:#C678DD;"> and</span><span style="color:#ABB2BF;"> cell </span><span style="color:#56B6C2;">%</span><span style="color:#D19A66;"> 1</span><span style="color:#56B6C2;"> ==</span><span style="color:#D19A66;"> 0.0</span><span style="color:#7F848E;font-style:italic;">  # ctype为2且为浮点</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">sheet1.</span><span style="color:#61AFEF;">cell_value</span><span style="color:#ABB2BF;">(x,y) </span><span style="color:#7F848E;font-style:italic;">#返回cell的值</span></span>
<span class="line"><span style="color:#ABB2BF;">sheet1.</span><span style="color:#61AFEF;">cell</span><span style="color:#ABB2BF;">(x,y).value </span><span style="color:#7F848E;font-style:italic;">#返回cell的值</span></span>
<span class="line"><span style="color:#ABB2BF;">sheet1.</span><span style="color:#61AFEF;">row</span><span style="color:#ABB2BF;">(x) </span><span style="color:#7F848E;font-style:italic;">#获取指定行，返回cell对象的列表</span></span>
<span class="line"><span style="color:#ABB2BF;">sheet1.</span><span style="color:#61AFEF;">row_values</span><span style="color:#ABB2BF;">(x) </span><span style="color:#7F848E;font-style:italic;">#获取指定行，返回列表</span></span>
<span class="line"><span style="color:#ABB2BF;">sheet1.</span><span style="color:#61AFEF;">col</span><span style="color:#ABB2BF;">(x) </span><span style="color:#7F848E;font-style:italic;">#获取指定列，返回cell对象的列表</span></span>
<span class="line"><span style="color:#ABB2BF;">sheet1.</span><span style="color:#61AFEF;">col_values</span><span style="color:#ABB2BF;">(x) </span><span style="color:#7F848E;font-style:italic;">#获取指定列，返回列表</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div></details>`,8)]))}const A=n(o,[["render",t]]);export{b as __pageData,A as default};
