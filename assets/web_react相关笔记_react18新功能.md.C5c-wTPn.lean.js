import{_ as p,c as e,G as a,a0 as l,B as o,o as t}from"./chunks/framework.BDOpb1iH.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"web/react相关笔记/react18新功能.md","filePath":"web/react相关笔记/react18新功能.md","lastUpdated":1733362906000}'),r={name:"web/react相关笔记/react18新功能.md"};function c(B,s,y,i,F,A){const n=o("end-time");return t(),e("div",null,[a(n,{time:"更新时间: 2022-12-02 10:13"}),s[0]||(s[0]=l(`<hr><h4 id="你需要知道关于react-18的几个新功能" tabindex="-1">你需要知道关于React-18的几个新功能 <a class="header-anchor" href="#你需要知道关于react-18的几个新功能" aria-label="Permalink to &quot;你需要知道关于React-18的几个新功能&quot;">​</a></h4><details class="details custom-block"><summary>React.flushSync</summary><hr><p>React更新优先级如下</p><p>flushSync 中的 setState <strong>&gt;</strong> 正常执行上下文中 setState <strong>&gt;</strong> setTimeout ，Promise 中的 setState。</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">handerClick</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#61AFEF;">  setTimeout</span><span style="color:#ABB2BF;">(() </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">    this</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setState</span><span style="color:#ABB2BF;">({</span><span style="color:#E06C75;">number</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">})</span></span>
<span class="line"><span style="color:#ABB2BF;">  })</span></span>
<span class="line highlighted"><span style="color:#E5C07B;">  this</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setState</span><span style="color:#ABB2BF;">({</span><span style="color:#E06C75;">number</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">})</span></span>
<span class="line highlighted"><span style="color:#E5C07B;">  ReactDOM</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">flushSync</span><span style="color:#ABB2BF;">(() </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line highlighted"><span style="color:#E5C07B;">    this</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setState</span><span style="color:#ABB2BF;">({</span><span style="color:#E06C75;">number</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">})</span></span>
<span class="line highlighted"><span style="color:#ABB2BF;">  })</span></span>
<span class="line"><span style="color:#E5C07B;">  this</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setState</span><span style="color:#ABB2BF;">({</span><span style="color:#E06C75;">number</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">})</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:#7F848E;font-style:italic;">// 结果 3, 4, 1</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><strong>flushSync补充说明:</strong> flushSync在同步条件下, 会合并之前的setState|useState,可以理解, 如果发现了flushSync就会先执行更新, 如果之前有未更新的setState｜useState, 就会合并</p></details><hr>`,4)),a(n,{time:"更新时间: 2022-12-13 21:42"}),s[1]||(s[1]=l(`<details class="details custom-block"><summary>累组件获取Ref三种方式</summary><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/* 类组件 */</span></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#E5C07B;"> Children</span><span style="color:#C678DD;"> extends</span><span style="color:#E5C07B;"> Component</span><span style="color:#ABB2BF;">{  </span></span>
<span class="line"><span style="color:#61AFEF;">    render</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">()</span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;hello,world&lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/* TODO: 1. Ref属性是一个字符串 */</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> default</span><span style="color:#C678DD;"> class</span><span style="color:#E5C07B;"> Index</span><span style="color:#C678DD;"> extends</span><span style="color:#E5C07B;"> React</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">Component</span><span style="color:#ABB2BF;">{</span></span>
<span class="line highlighted"><span style="color:#E06C75;">  currentDom1</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> null</span></span>
<span class="line highlighted"><span style="color:#E06C75;">  currentComponentInstance</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> null</span></span>
<span class="line highlighted"><span style="color:#E06C75;">  currentDom2</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> React</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">createRef</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#61AFEF;">  componentDidMount</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"><span style="color:#E5C07B;">    console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">refs</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">//1. 此方法高版本已弃用, 不推荐使用</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">    console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">currentDom1</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#E5C07B;">    console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">currentComponentInstance</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">    console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;currentDom2: &#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">currentDom2</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">current</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#61AFEF;">  render</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">()</span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> &lt;</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line highlighted"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E06C75;">div</span><span style="color:#D19A66;font-style:italic;"> ref</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;currentDom&quot;</span><span style="color:#ABB2BF;">  &gt;字符串模式获取元素或组件&lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line highlighted"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E5C07B;">Children</span><span style="color:#D19A66;font-style:italic;"> ref</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;currentComInstance&quot;</span><span style="color:#ABB2BF;">  /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">    {</span><span style="color:#7F848E;font-style:italic;">/* TODO: 2. ref value 是一个函数, 回调参数就是DOM元素或者组件实例 */</span><span style="color:#C678DD;">}</span></span>
<span class="line highlighted"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E06C75;">div</span><span style="color:#D19A66;font-style:italic;"> ref</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">{</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">node</span><span style="color:#ABB2BF;">)</span><span style="color:#C678DD;">=&gt;</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">currentDom1</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> node</span><span style="color:#C678DD;"> }</span><span style="color:#ABB2BF;">  &gt;Ref模式获取元素或组件&lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line highlighted"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E5C07B;">Children</span><span style="color:#D19A66;font-style:italic;"> ref</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">{</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">node</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">currentComponentInstance</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> node</span><span style="color:#C678DD;">  }</span><span style="color:#ABB2BF;">  /&gt;</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E06C75;">div</span><span style="color:#D19A66;font-style:italic;"> ref</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">{</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">currentDom2</span><span style="color:#C678DD;">}</span><span style="color:#ABB2BF;">  &gt;Ref模式获取元素或组件&lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div></details>`,1))])}const u=p(r,[["render",c]]);export{b as __pageData,u as default};
